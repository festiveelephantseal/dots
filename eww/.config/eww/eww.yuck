(defpoll HOUR :interval "5s" `date +\"%I\"`)
(defpoll MIN :interval "1s" `date +\"%M\"`)
(defpoll CPU :interval "1s" `scripts/sys_info --cpu`)
(defpoll BRIGHT :interval "5s" `xbacklight`)
(defpoll BATTERY0 :interval "1s" `cat /sys/class/power_supply/BAT0/capacity`)
(defpoll BATTERY1 :interval "1s" `cat /sys/class/power_supply/BAT1/capacity`)
(defpoll MEMORY :interval "2s" `scripts/sys_info --mem`)

(defpoll SONG :interval "1s" `scripts/music_info --song`)
(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
(defpoll STATUS :interval "1s" `scripts/music_info --status`)
(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
(defpoll COVER :interval "1s" `scripts/music_info --cover`)
(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)

(defvar IMAGE "/home/raghav/Pictures/pfp.jpg")

(defwidget clock[]
	(box :class "items" :orientation "h" :spacing 0 
    (box :orientation "h" :spacing 0 
			(label :class "time_hour" :limit-width 25 :text HOUR)
      (label :class "seperator" :text ":") 
			(label :class "time_min"  :limit-width 25 :text MIN))
  )
)

(defwidget monitor[]
  (box :class "items1" :orientation "v" :spacing 50 :space-evenly true
    (box :orientation "v" :spacing 0
    (circular-progress :class "cpu_usage" :thickness 7 :value CPU
    (label :class "cpu_text" :text "")))
  )
)

(defwidget user[]
  (box :class "items2" :orientation "v" :space-evenly true
    (box)
  )
)

(defwidget bright[]
  (box :class "items3" :orientation "h" :space-evenly "false" :spacing 30 
    (label :class "bright_icon" :text "")
    (scale :onchange "xbacklight -set {}":class "bright_bar" :min 0 :max 100 :value BRIGHT)
  )
)

(defwidget bat[]
  (box :class "items4" :orientation "v" :space-evently "false" 
  (label :class "bat_icon" :text "")
  (scale :active "false" :class "bat0" :min 0 :max 100 :value BATTERY0)


  (label :class "bat_icon" :text "")
  (scale :active "false" :class "bat1" :min 0 :max 100 :value BATTERY1)
  )
)

(defwidget mem[]
  (box :class "items5" :space-evenly "false" :spacing 30 
    (label :class "mem_icon" :text "")
    (scale :active false :class "mem_scale" :min 0 :max 100 :value MEMORY)
  )
)

(defwindow clock :stacking "fg" :focusable "false" :screen 1 
	    :geometry (geometry :x 840 :y 295 :width 120 :height 15)
					(clock))

(defwindow monitor :stacking "fg" :focusable "false" :screen 1 
      :geometry (geometry :x 840 :y 150 :width 120 :height 135)
          (monitor))

(defwindow user :stacking "fg" :focusable "false" :screen 1 
	    :geometry (geometry :x 610 :y 150 :width 220 :height 200)
					(user))

(defwindow bright :stacking "fg" :focusable "false" :screen 1 
	    :geometry (geometry :x 610 :y 360 :width 350 :height 120)
					(bright))

(defwindow battery :stacking "fg" :focusable "false" :screen 1 
	    :geometry (geometry :x 345 :y 150 :width 250 :height 200)
					(bat))

(defwindow memory :stacking "fg" :focusable "false" :screen 1 
	    :geometry (geometry :x 345 :y 360 :width 250 :height 120)
					(mem))
